# Generated by Django 4.2 on 2023-04-26 11:59

# Third Party Library
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Approval',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20, unique=True, verbose_name='TODO Approval')),
            ],
        ),
        migrations.CreateModel(
            name='BusinessArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20, unique=True, verbose_name='Название бизнес категории')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='Название группы')),
            ],
        ),
        migrations.CreateModel(
            name='HighLevelStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='Название статус высокого уровня')),
            ],
        ),
        migrations.CreateModel(
            name='LossesForAttack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='TODO LossesForAttack')),
            ],
        ),
        migrations.CreateModel(
            name='LowLevelStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='Название статус низкого уровня')),
            ],
        ),
        migrations.CreateModel(
            name='RiskAdjustment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20, unique=True, verbose_name='Степень риска')),
            ],
        ),
        migrations.CreateModel(
            name='SavingType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='Название типа экономии')),
            ],
        ),
        migrations.CreateModel(
            name='Stream',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20, unique=True, verbose_name='TODO Stream')),
            ],
        ),
        migrations.CreateModel(
            name='SupportFunction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='Название функции')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, unique=True, verbose_name='Название проекта')),
                ('initial_start_date', models.DateField(verbose_name='Дата фактического начала проекта')),
                ('planned_start_date', models.DateField(verbose_name='Дата плановго начала проекта')),
                ('project_end_date', models.DateField(verbose_name='Дата плановго окончания проекта')),
                ('saving_potential', models.FloatField(verbose_name='Потенциальная экономия, kE')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('budget_use', models.BooleanField(verbose_name='Бюджет')),
                ('local_focus', models.BooleanField(verbose_name='TODO local_focus')),
                ('folder_url', models.URLField(blank=True, null=True, verbose_name='Ссылка на папку проекта')),
                ('business_area', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='project', to='saving_tracker.businessarea')),
                ('coordinator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='project_coordinator', to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='project', to='saving_tracker.group')),
                ('high_level_status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='project', to='saving_tracker.highlevelstatus')),
                ('losses_for_attack', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='project', to='saving_tracker.lossesforattack')),
                ('low_level_status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='project', to='saving_tracker.lowlevelstatus')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='project_owner', to=settings.AUTH_USER_MODEL)),
                ('risk_adjustment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='project', to='saving_tracker.riskadjustment')),
                ('saving_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='project', to='saving_tracker.savingtype')),
                ('stream', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='project', to='saving_tracker.stream')),
                ('support_function', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='project', to='saving_tracker.supportfunction')),
            ],
        ),
    ]
